<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xyauto.mapper.OfficeAreaAuthorityMapper">
	<resultMap id="BaseResultMap" type="com.xyauto.pojo.OfficeAreaAuthority">
		<id column="oaa_id" jdbcType="CHAR" property="oaaId" />
		<result column="office_ids" jdbcType="NVARCHAR" property="officeIds" />
		<result column="employee_id" jdbcType="VARCHAR" property="employeeId" />
		<result column="employee_name" jdbcType="NVARCHAR" property="employeeName" />
		<result column="department_id" jdbcType="VARCHAR" property="departmentId" />
		<result column="department_name" jdbcType="NVARCHAR" property="departmentName" />
		<result column="founder_id" jdbcType="VARCHAR" property="founderId" />
		<result column="founder_name" jdbcType="NVARCHAR" property="founderName" />
		<result column="adddate" jdbcType="TIMESTAMP" property="adddate" />
		<result column="is_delete" jdbcType="BIT" property="isDelete" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="VARCHAR" property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user" jdbcType="VARCHAR" property="updateUser" />
	</resultMap>
	<insert id="insert" parameterType="com.xyauto.pojo.OfficeAreaAuthority">
		insert into office_area_authority (
		oaa_id,
		office_ids,
		employee_id,
		employee_name,
		department_id,
		department_name,
		founder_id,
		founder_name,
		adddate,
		is_delete,
		create_user,
		update_time,
		update_user)
		values (
		#{oaaId,jdbcType=CHAR},
		#{officeIds,jdbcType=NVARCHAR},
		#{employeeId,jdbcType=VARCHAR},
		#{employeeName,jdbcType=NVARCHAR},
		#{departmentId,jdbcType=VARCHAR},
		#{departmentName,jdbcType=NVARCHAR},
		#{founderId,jdbcType=VARCHAR},
		#{founderName,jdbcType=NVARCHAR},
		#{adddate,jdbcType=TIMESTAMP},
		#{isDelete,jdbcType=BIT},
		#{createUser,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=VARCHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.xyauto.pojo.OfficeAreaAuthority">
		update office_area_authority set
		<if test="officeIds != null and officeIds != ''">
			office_ids = #{officeIds,jdbcType=NVARCHAR},
		</if>
		<if test="employeeId != null and employeeId != ''">
			employee_id = #{employeeId,jdbcType=VARCHAR},
		</if>
		<if test="employeeName != null and employeeName != ''">
			employee_name = #{employeeName,jdbcType=NVARCHAR},
		</if>
		<if test="departmentId != null and departmentId != ''">
			department_id = #{departmentId,jdbcType=VARCHAR},
		</if>
		<if test="departmentName != null and departmentName != ''">
			department_name = #{departmentName,jdbcType=NVARCHAR},
		</if>
		<if test="founderId != null and founderId != ''">
			founder_id = #{founderId,jdbcType=VARCHAR},
		</if>
		<if test="founderName != null and founderName != ''">
			founder_name = #{founderName,jdbcType=NVARCHAR},
		</if>
		<if test="adddate != null and adddate != ''">
			adddate = #{adddate,jdbcType=TIMESTAMP},
		</if>
		<if test="isDelete != null and isDelete != ''">
			is_delete = #{isDelete,jdbcType=BIT},
		</if>
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		update_user = #{updateUser,jdbcType=VARCHAR}
		where
		oaa_id = #{oaaId,jdbcType=CHAR}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select oaa_id, office_ids, employee_id, employee_name, department_id,
		department_name,
		founder_id, founder_name, adddate, is_delete, create_time, create_user,
		update_time,
		update_user
		from office_area_authority
		where oaa_id = #{oaaId,jdbcType=CHAR}
	</select>
	<select id="countByNotDel" resultType="java.lang.Integer">
		select count(1) from office_area_authority where is_delete = 0
	</select>
	<select id="existsByEmployeeId" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from office_area_authority where is_delete = 0 and employee_id = #{employeeId}
	</select>
	<select id="selectByCondition" parameterType="map" resultMap="BaseResultMap">
		select
			oaa_id,
			office_ids,
			employee_id,
			employee_name,
			department_id,
			department_name,
			founder_id,
			founder_name,
			adddate,
			is_delete
		from
			office_area_authority
		where 
			is_delete = 0 
			<if test="office_id != null and office_id != ''">
				and office_ids like #{ office_id } 
			</if>
			<if test="employee_name != null and employee_name != ''">
				and employee_name = #{ employee_name }
			</if>
		order by adddate desc
		OFFSET #{ pageNo } ROW
		FETCH NEXT #{ pageSize } ROW ONLY
	</select>
</mapper>